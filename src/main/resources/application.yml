spring:
  application:
    name: hhplus-concert
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}/${DB_NAME:concert}?characterEncoding=UTF-8&serverTimezone=UTC
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:1234}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: ${JPA_SHOW_SQL:false}
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:none}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: ${JPA_FORMAT_SQL:false}
        highlight_sql: ${JPA_HIGHLIGHT_SQL:false}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
  cache:
    type: redis
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

queue:
  waiting-key: ${QUEUE_WAITING_KEY:waiting}
  active-key: ${QUEUE_ACTIVE_KEY:active}

# Swagger springdoc-ui Configuration
springdoc:
  packages-to-scan: com.example.hhplus.concert
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  cache:
    disabled: true # 캐시 사용 여부
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
  swagger-ui:
    enabled: true # Swagger UI 사용여부 : 접근 경로 => <http://localhost:8080/swagger-ui/index.html>
    tags-sorter: alpha # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: alpha # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    defaultModelsExpandDepth: -1 # 모델 확장 깊이 (-1: 모델 숨김)

